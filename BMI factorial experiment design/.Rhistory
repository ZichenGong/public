# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
DanielPlot(model, half = FALSE, autolab = FALSE)
# model after screening
finalmodel <- lm(BMI ~ E + A*B*C + A*B*D + A*B*C*D, data = pair)
finalanv <- anova(finalmodel)
kable(finalanv, col.names = c("Degree of Freedom", "Sum of Squares",
"Mean Square", "F Value", "P Value"),
align = "ccccc",
caption = "Table 2: Analysis of Variance")
qqPlot(finalmodel$residuals, main = "QQ Plot", ylab = "Residuals")
plot(finalmodel$fitted.values, finalmodel$residuals,
main = "Heterogeneity of Error Variances Check",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0)
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
DanielPlot(model, half = FALSE, autolab = FALSE)
# model after screening
finalmodel <- lm(BMI ~ E + A*B*C + A*B*D + A*B*C*D, data = pair)
finalanv <- anova(finalmodel)
kable(finalanv, col.names = c("Degree of Freedom", "Sum of Squares",
"Mean Square", "F Value", "P Value"),
align = "ccccc",
caption = "Table 2: Analysis of Variance")
qqPlot(finalmodel$residuals, main = "QQ Plot", ylab = "Residuals")
plot(finalmodel$fitted.values, finalmodel$residuals,
main = "Heterogeneity of Error Variances Check",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0)
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
View(df)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
View(pair)
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
write.csv(pair, file = "pair.csv")
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
write.csv(pair, file = "pair.csv")
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable_1 <- kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
write.table(kable_1, file = "table_1.txt", sep = ",", quote = FALSE, row.names = F)
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
DanielPlot(model, half = FALSE, autolab = FALSE)
DanielPlot(model, half = FALSE, autolab = FALSE)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
knitr::opts_chunk$set(echo = TRUE)
mydata <- read.csv("heart_2020_cleaned.csv")
# Uncomment the following lines if you do not have this package
# install.package(dplyr)
# install.package(knitr)
# install.package(FrF2)
# install.package(car)
library(dplyr)
library(knitr)
library(FrF2)
library(car)
# Data Cleaning
# Assign KidneyDisease as factor A
# Assign Smoking as factor B
# Assign AlcoholDrinking as factor C
# Assign PhysicalActivity as factor D
# Assign SleepTime as factor E
# Assign BMI as response variable Y
mydata$A = ifelse(mydata$KidneyDisease == "Yes", 1, -1)
mydata$B = ifelse(mydata$Smoking == "Yes", 1, -1)
mydata$C = ifelse(mydata$AlcoholDrinking == "Yes", 1, -1)
mydata$D = ifelse(mydata$PhysicalActivity == "Yes", 1, -1)
mydata$E = ifelse(mydata$SleepTime >= 7, 1, -1)
df <- mydata %>%
select(BMI, A, B, C, D, E)
L <- ((df$A == 1) + (df$B == 1) + (df$C == 1) + (df$D == 1) + (df$E == 1)) %% 2
df$block = ifelse(L == 0, 1, 2)
# Select 32 observations
full <- FrF2(32, nfactors=5,
factor.names = c("A", "B", "C", "D", "E"), randomize = FALSE)
full.exp <- data.frame(full)
pair <- merge(full.exp, df, by = c("A", "B", "C", "D", "E"))
experiment <- unique(pair[ , 1:5])
i <- rownames(experiment)
pair <- pair %>% filter(row_number() %in% i)
block_1 <- pair %>%
filter(block == 1) %>%
select(A, B, C, D, E, BMI)
block_2 <- pair %>%
filter(block == 2) %>%
select(A, B, C, D, E, BMI)
mean(block_1$BMI)
mean(block_2$BMI)
# Fit model
model <- lm(BMI ~ A * B * C * D * E, data = pair)
anv_model <- anova(model)
reg_coef <- round(model$coefficients, 2)
effect_est <- round(2 * model$coefficients, 2)
sum_sq <- round(anv_model$`Sum Sq`, 2)
contribution <- round(anv_model$`Sum Sq` /
sum(anv_model$`Sum Sq`) * 100, 2)
table_1 <- data.frame(reg_coef, effect_est, sum_sq, contribution)
kable(table_1, col.names = c("Regression Coefficient", "Effect Estimate",
"Sum of Squares", "Percent Contribution"),
align = "cccc",
caption = "Table 1: Effect Estimates for the Blocked 2^5 Design")
DanielPlot(model, half = FALSE, autolab = FALSE)
# model after screening
finalmodel <- lm(BMI ~ E + A*B*C + A*B*D + A*B*C*D, data = pair)
finalanv <- anova(finalmodel)
kable(finalanv, col.names = c("Degree of Freedom", "Sum of Squares",
"Mean Square", "F Value", "P Value"),
align = "ccccc",
caption = "Table 2: Analysis of Variance")
qqPlot(finalmodel$residuals, main = "QQ Plot", ylab = "Residuals")
plot(finalmodel$fitted.values, finalmodel$residuals,
main = "Heterogeneity of Error Variances Check",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0)
qqPlot(finalmodel$residuals, main = "QQ Plot", ylab = "Residuals")
plot(finalmodel$fitted.values, finalmodel$residuals,
main = "Heterogeneity of Error Variances Check",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0)
